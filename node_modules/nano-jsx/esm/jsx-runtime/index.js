var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
/* eslint-disable prefer-const */
export { Fragment } from '../fragment.js';
import { h } from '../core.js';
const createNode = function (type, props) {
    let { children = [] } = props, _props = __rest(props, ["children"]);
    if (!Array.isArray(children))
        children = [children];
    return h(type, _props, ...children);
};
export { createNode as jsx };
export { createNode as jsxs };
export { createNode as jsxDev };
//# sourceMappingURL=index.js.map